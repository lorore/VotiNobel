a me non interessa l'ordine (va bene un set)
input:
    - Insieme di Esame(PARTENZA)
    - # crediti (m)
    
Output:
    -insieme (Set) di Esame, sottoinsieme di PARTENZA, tale che
    *somma Esame.crediti()==m
    *media Esame.voto() sia MAX
    
APPROCCIO 1 (il più stupido)
Ad ogni livello della ricorsione aggiungo un esame -->
	devo decidere quale, li provo tutti
	(simile agli anagrammi)
	
-SOLUZIONE PARZIALE 
   Parziale= sottoinsieme di esattamente L elementi
-GENERAZIONE SOLUZIONE PARZIALE

	per tutti i casi che non ho ancora considerato
	(tutti gli esami non ancora compresi in PARZIALE):
	*provo ad aggiungere
	*faccio andare avanti la ricorsione
	*faccio backtracking
	
	L=0 -->ho N scelte possibili 
	dove N numero di esami che ho in partenza
	
- CASI TERMINALI 
L= partenza.size() --> non ci sono più esami da aggiungere
Controllo soluzione parziale:
*se PARZIALE.sommaCrediti()==m
	-se PARZIALE.media() > di tutte le medie viste fino ad
	ora -> tengo traccia di PARZIALE
*se PARZIALE.sommaCrediti()!=m 
	-abbandono la ricorsione
	
PARZIALE.sommaCrediti() >=m -> mi fermo subito!
	*se >m -> scarto parziale e non vado avanti
	*se =m->controllo soluzione parziale
	




APPROCCIO 2

- LIVELLO DELLA RICORSIONE (L)
	->indica quale corso sto decidendo di mettere
	(o non mettere) nella soluzione
	
	supponiamo di avere PARTENZA ={e1,e2,e3,... en}
	L=0  ->considero e1
	  *lo metto-> PARZIALE {e1}
	  	L=1->considero e2
	  	*lo metto->PARZIALE{e1,e2}
	  	*non lo metto ->PARZIALE={e1}
	  *non lo metto -> PARZIALE ={}
		L=1->considero e2
		  *lo metto ->PARZIALE={e2}
		  *non lo metto->PARZIALE{}
		  
Ad ogni livello ho due scelte



	
	
